@startuml
skinParam ArrowColor Black
skinParam BackgroundColor White
skinParam actorBorderColor Black
skinparam actorBackgroundColor LightGray
skinParam componentBorderColor DarkGray
skinparam componentFontColor White
skinparam componentStereotypeFontColor LightGray
skinparam componentBackgroundColor #008292
skinparam databaseFontColor White
skinparam databaseBackgroundColor #008292
skinparam entityBackgroundColor LightGray
skinparam entityBorderColor DarkGray
skinparam queueBackgroundColor LightGray
skinparam queueBorderColor DarkGray
skinparam frameBorderColor DarkGray
skinparam frameBackgroundColor #f8f8f8
skinparam nodeBorderColor DarkGray
skinparam nodeBackgroundColor #f8f8f8
skinparam DefaultTextAlignment Center

actor Applicant as "Data Applicant"
actor Approver
actor APIUser

node REMS {
  component WebApp << Single-page App >>
  component API
}


node Auth0 {
    component RBAC
}

node Gen3 {
    component Portal as "portal/ff"
    component Fence as "fence"
}


database Postgres

node EmailServer << SMTP >> {
}

Applicant --> WebApp
Applicant --> Portal
Approver --> WebApp
APIUser ...> API : "use with key"

WebApp --> API : "REST"
WebApp --> Auth0 : "OIDC"

Portal --> Fence
Fence --> Auth0 : "OIDC"

API --> Auth0 : "OIDC"
API --> RBAC : "push\nentitlements"
API -down-> Postgres
API -down-> EmailServer : "email\nnotifications"

@enduml

@startuml
skinParam ArrowColor Black
skinParam BackgroundColor White
skinParam actorBorderColor Black
skinparam actorBackgroundColor LightGray
skinParam componentBorderColor DarkGray
skinparam componentFontColor White
skinparam componentStereotypeFontColor LightGray
skinparam componentBackgroundColor #008292
skinparam databaseFontColor White
skinparam databaseBackgroundColor #008292
skinparam entityBackgroundColor LightGray
skinparam entityBorderColor DarkGray
skinparam queueBackgroundColor LightGray
skinparam queueBorderColor DarkGray
skinparam frameBorderColor DarkGray
skinparam frameBackgroundColor #f8f8f8
skinparam nodeBorderColor DarkGray
skinparam nodeBackgroundColor #f8f8f8
skinparam DefaultTextAlignment Center

'together {
  actor Applicant as "Data Consumer"
  actor Approver
  actor APIUser
'}

node REMS {
  component WebApp << Single-page App >>
  component API
}


node Auth0 {
    component RBAC 
}

node Gen3 {
    component Portal as "portal/ff"
    component Fence as "fence"
}


database Postgres

node EmailServer << SMTP >> {
}

Applicant -down-> WebApp
Applicant -down-> Portal
Approver -down-> WebApp
APIUser .down.> API : "use with key"

WebApp -down-> API : "REST"
Portal -right-> Fence

Fence --> Auth0 : "OIDC\n\n"
WebApp --> Auth0 : "OIDC"
API --> Auth0 : "OIDC"


API -left-> RBAC : "push\nentitlements"
'note on link
'  push  entitlements
'endnote

API -down-> Postgres
API -down-> EmailServer : "email notifications"


@enduml
